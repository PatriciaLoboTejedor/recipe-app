{"version":3,"sources":["images/titulo_recetas.png","components/Recipe.js","components/RecipeList.js","services/apiFetch.js","services/localStorage.js","components/App.js","index.js"],"names":["Recipe","props","timeRecipe","recipe","time","className","src","image","alt","name","cuisineType","map","index","RecipeList","recipeList","apiFetch","fetch","then","response","json","data","hits","label","totalTime","objectExport","get","key","localStorage","getItem","JSON","parse","set","value","setItem","stringify","clear","App","useState","ls","setRecipe","useEffect","length","recipeData","headerImage","ReactDOM","render","document","getElementById"],"mappings":"sMAAe,MAA0B,2C,OC0C1BA,MA1Cf,SAAgBC,GACd,IAUMC,EAAaD,EAAME,OAAOC,KAiBhC,OACE,0BAASC,UAAU,aAAnB,UACE,qBACEA,UAAU,kBACVC,IAAKL,EAAME,OAAOI,MAClBC,IAAKP,EAAME,OAAOM,OAEpB,oBAAIJ,UAAU,wBAAd,SAAuCJ,EAAME,OAAOM,OAtBnC,IAAfP,EAEA,oBAAGG,UAAU,wBAAb,UACE,mBAAGA,UAAU,kBADf,IACqCH,EADrC,WAMA,oBAAGG,UAAU,wBAAb,UACE,mBAAGA,UAAU,kBADf,cAgBF,oBAAIA,UAAU,wBAAd,SAnCKJ,EAAME,OAAOO,YAAYC,KAAI,SAACD,EAAaE,GAChD,OACE,oBAAIP,UAAU,GAAd,SACGK,GADmBE,YCWfC,MAbf,SAAoBZ,GAClB,IAAMa,EAAab,EAAMa,WAAWH,KAAI,SAACR,EAAQS,GAAT,OACtC,6BACE,cAAC,EAAD,CAAQT,OAAQA,KADTS,MAIX,OACE,kCACE,oBAAIP,UAAU,aAAd,SAA4BS,OCSnBC,EAnBE,WAGf,OAAOC,MADL,+GAECC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAUL,OATmBA,EAAKC,KAAKV,KAAI,SAACR,GAChC,MAAO,CACLM,KAAMN,EAAOA,OAAOmB,MACpBf,MAAOJ,EAAOA,OAAOI,MACrBH,KAAMD,EAAOA,OAAOoB,UACpBb,YAAaP,EAAOA,OAAOO,oBCQtBc,EANM,CACnBC,IAVU,SAACC,GACX,IAAMN,EAAOO,aAAaC,QAAQF,GAClC,OAAOG,KAAKC,MAAMV,IASlBW,IAfU,SAACL,EAAKM,GAChBL,aAAaM,QAAQP,EAAKG,KAAKK,UAAUF,KAezCG,MAPY,WACZR,aAAaQ,UC8BAC,EA9BH,WAEV,MAA4BC,mBAASC,EAAGb,IAAI,WAAa,IAAzD,mBAAOtB,EAAP,KAAeoC,EAAf,KAgBA,OAbAC,qBAAU,WACc,IAAlBrC,EAAOsC,QACT1B,IAAWE,MAAK,SAACyB,GACfH,EAAUG,QAGb,CAACvC,IAGJqC,qBAAU,WACRF,EAAGP,IAAI,SAAU5B,KAChB,CAACA,IAGF,sBAAKE,UAAU,OAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,qBAAKC,IAAKqC,EAAanC,IAAI,GAAGH,UAAU,mBAE1C,sBAAMA,UAAU,OAAhB,SACE,cAAC,EAAD,CAAYS,WAAYX,UC5BhCyC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.64f8d617.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/titulo_recetas.9593c9d1.png\";","function Recipe(props) {\r\n  const cuisineTypes = () => {\r\n    return props.recipe.cuisineType.map((cuisineType, index) => {\r\n      return (\r\n        <li className=\"\" key={index}>\r\n          {cuisineType}\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  const timeRecipe = props.recipe.time;\r\n  const getTime = () => {\r\n    if (timeRecipe !== 0) {\r\n      return (\r\n        <p className=\"recipeCard__text-time\">\r\n          <i className=\"fa fa-clock-o\"></i> {timeRecipe} min.\r\n        </p>\r\n      );\r\n    } else {\r\n      return (\r\n        <p className=\"recipeCard__text-time\">\r\n          <i className=\"fa fa-clock-o\"></i> -- min.\r\n        </p>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <article className=\"recipeCard\">\r\n      <img\r\n        className=\"recipeCard__img\"\r\n        src={props.recipe.image}\r\n        alt={props.recipe.name}\r\n      />\r\n      <h2 className=\"recipeCard__text-name\">{props.recipe.name}</h2>\r\n      {getTime()}\r\n      <ul className=\"recipeCard__text-type\">{cuisineTypes()}</ul>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Recipe;\r\n","import Recipe from \"./Recipe\";\r\n\r\nfunction RecipeList(props) {\r\n  const recipeList = props.recipeList.map((recipe, index) => (\r\n    <li key={index}>\r\n      <Recipe recipe={recipe} />\r\n    </li>\r\n  ));\r\n  return (\r\n    <section>\r\n      <ul className=\"main__list\">{recipeList}</ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default RecipeList;\r\n","const apiFetch = () => {\r\n  const urlApi =\r\n    \"https://api.edamam.com/search?q=&app_id=beec038c&app_key=e84922b8ac8402d4979b1269c8df105d&cuisineType=Asian\";\r\n  return fetch(urlApi)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const recipeData = data.hits.map((recipe) => {\r\n        return {\r\n          name: recipe.recipe.label,\r\n          image: recipe.recipe.image,\r\n          time: recipe.recipe.totalTime,\r\n          cuisineType: recipe.recipe.cuisineType,\r\n        };\r\n      });\r\n\r\n      return recipeData;\r\n    });\r\n};\r\n\r\nexport default apiFetch;\r\n\r\n// Ordenar alfabeticamente\r\n/*const orderAllRecipeByName = data.hits.recipe.sort((a, b) =>\r\n        a.label.localeCompare(b.label)\r\n      );*/\r\n","const set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst get = (key) => {\r\n  const data = localStorage.getItem(key);\r\n  return JSON.parse(data);\r\n};\r\n\r\nconst clear = () => {\r\n  localStorage.clear();\r\n};\r\n\r\nconst objectExport = {\r\n  get: get,\r\n  set: set,\r\n  clear: clear,\r\n};\r\n\r\nexport default objectExport;\r\n","import { useState, useEffect } from \"react\";\n\n// Imagen importada\nimport headerImage from \"../images/titulo_recetas.png\";\n// Componentes importados\nimport RecipeList from \"./RecipeList\";\n// Servicios importados\nimport apiFetch from \"../services/apiFetch\";\nimport ls from \"../services/localStorage\";\n\nconst App = () => {\n  // Estado inicial del array principal, o se llena con el local o nos devuelve un array vacío\n  const [recipe, setRecipe] = useState(ls.get(\"recipe\") || []);\n\n  // Si el array recipe esta vacío entonces llamo a la función del fetch\n  useEffect(() => {\n    if (recipe.length === 0) {\n      apiFetch().then((recipeData) => {\n        setRecipe(recipeData);\n      });\n    }\n  }, [recipe]);\n\n  // Guarda los cambios de estado en localStorage\n  useEffect(() => {\n    ls.set(\"recipe\", recipe);\n  }, [recipe]);\n\n  return (\n    <div className=\"body\">\n      <header className=\"header\">\n        <img src={headerImage} alt=\"\" className=\"header__logo\" />\n      </header>\n      <main className=\"main\">\n        <RecipeList recipeList={recipe} />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/main.scss\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}